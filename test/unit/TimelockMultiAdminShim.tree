TimelockMultiAdminShim::constructor
├── when passing valid admin and timelock addresses
│   ├── it should deploy
│   ├── it should set the admin address
│   └── it should set the timelock address
├── when passing zero admin address
│   └── it should revert // with TimelockMultiAdminShim__InvalidAdmin
└── when passing zero timelock address
    └── it should revert // with TimelockMultiAdminShim__InvalidTimelock


TimelockMultiAdminShim::queueTransaction
├── when target is this contract
│   ├── when caller is admin
│   │   └── it should forward the call to timelock
│   ├── when caller is authorized executor
│   │   └── it should forward the call to timelock
│   ├── when caller is both admin and executor
│   │   └── it should forward the call to timelock
│   └── when caller is not admin or executor
│       └── it should revert // with TimelockMultiAdminShim__Unauthorized
└── when target is external contract
    └── it should forward the call to timelock


TimelockMultiAdminShim::cancelTransaction
└── when called
    └── it should forward the call to timelock


TimelockMultiAdminShim::executeTransaction
└── when called
    └── it should forward the call to timelock


TimelockMultiAdminShim::addExecutor
├── when called by timelock
│   ├── it should mark the address as executor
│   └── it should emit ExecutorAdded event
└── when called by non-timelock
    └── it should revert // with TimelockMultiAdminShim__Unauthorized


TimelockMultiAdminShim::removeExecutor
├── when called by timelock
│   ├── it should unmark the address as executor
│   └── it should emit ExecutorRemoved event
└── when called by non-timelock
    └── it should revert // with TimelockMultiAdminShim__Unauthorized


TimelockMultiAdminShim::updateAdmin
├── when called by timelock
│   ├── it should update the admin address
│   └── it should emit AdminUpdated event
└── when called by non-timelock
    └── it should revert // with TimelockMultiAdminShim__Unauthorized